[gd_scene load_steps=17 format=3 uid="uid://bjvlw3ovoh431"]

[ext_resource type="Script" uid="uid://bqxfracognqub" path="res://addons/markdown_book/markdown_book.gd" id="1_u43oy"]
[ext_resource type="Script" uid="uid://dnkas1rovex6m" path="res://addons/markdown_book/markdown_tree.gd" id="2_uibto"]
[ext_resource type="Script" uid="uid://dbap0gqox0ty1" path="res://addons/markdownlabel/markdownlabel.gd" id="3_vbvx5"]
[ext_resource type="Script" uid="uid://dcx7crs23nf4" path="res://addons/markdownlabel/header_formats/h1_format.gd" id="4_sa118"]
[ext_resource type="Script" uid="uid://d0sin64i4v3op" path="res://addons/markdownlabel/header_formats/h2_format.gd" id="5_yena8"]
[ext_resource type="Script" uid="uid://dlok0dv1tq2bf" path="res://addons/markdownlabel/header_formats/h3_format.gd" id="6_ffyjx"]
[ext_resource type="Script" uid="uid://bayuh2vafablg" path="res://addons/markdownlabel/header_formats/h4_format.gd" id="7_7xfpw"]
[ext_resource type="Script" uid="uid://dfr1w7u3jgni3" path="res://addons/markdownlabel/header_formats/h5_format.gd" id="8_bgjmj"]
[ext_resource type="Script" uid="uid://bsi6dexoofpe6" path="res://addons/markdownlabel/header_formats/h6_format.gd" id="9_tev5r"]

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_dl7tr"]
content_margin_left = 5.0
content_margin_top = 0.0
content_margin_right = 5.0
content_margin_bottom = 5.0

[sub_resource type="Resource" id="Resource_glb6x"]
resource_local_to_scene = true
script = ExtResource("4_sa118")
font_size = 2.285
is_bold = false
is_italic = false
is_underlined = false
override_font_color = false
font_color = Color(1, 1, 1, 1)

[sub_resource type="Resource" id="Resource_1hc8u"]
resource_local_to_scene = true
script = ExtResource("5_yena8")
font_size = 1.714
is_bold = false
is_italic = false
is_underlined = false
override_font_color = false
font_color = Color(1, 1, 1, 1)

[sub_resource type="Resource" id="Resource_ub2gb"]
resource_local_to_scene = true
script = ExtResource("6_ffyjx")
font_size = 1.428
is_bold = false
is_italic = false
is_underlined = false
override_font_color = false
font_color = Color(1, 1, 1, 1)

[sub_resource type="Resource" id="Resource_qi205"]
resource_local_to_scene = true
script = ExtResource("7_7xfpw")
font_size = 1.142
is_bold = false
is_italic = false
is_underlined = false
override_font_color = false
font_color = Color(1, 1, 1, 1)

[sub_resource type="Resource" id="Resource_0v8em"]
resource_local_to_scene = true
script = ExtResource("8_bgjmj")
font_size = 1.0
is_bold = false
is_italic = false
is_underlined = false
override_font_color = false
font_color = Color(1, 1, 1, 1)

[sub_resource type="Resource" id="Resource_jsubp"]
resource_local_to_scene = true
script = ExtResource("9_tev5r")
font_size = 0.857
is_bold = false
is_italic = false
is_underlined = false
override_font_color = false
font_color = Color(1, 1, 1, 1)

[node name="PanelContainer" type="PanelContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_styles/panel = SubResource("StyleBoxEmpty_dl7tr")

[node name="MarkdownViewer" type="HBoxContainer" parent="." node_paths=PackedStringArray("tree")]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_constants/separation = 5
script = ExtResource("1_u43oy")
tree = NodePath("Tree")

[node name="Tree" type="Tree" parent="MarkdownViewer" node_paths=PackedStringArray("rich_text")]
custom_minimum_size = Vector2(350, 0)
layout_mode = 2
hide_root = true
script = ExtResource("2_uibto")
rich_text = NodePath("../MarkdownLabel")

[node name="MarkdownLabel" type="RichTextLabel" parent="MarkdownViewer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_font_sizes/normal_font_size = 14
theme_override_font_sizes/bold_font_size = 18
bbcode_enabled = true
text = "[font_size=31]Game Design Document: The Trial of the Under-City[/font_size]

[font_size=23]Overview[/font_size]

Game Title: The Trial of the Under-City

Concept: A fast-paced, third-person action-platformer where a single player (the \"Runner\") navigates a deadly, procedurally generated 3D ruin (the \"Gauntlet\"). The game is designed to be live-streamed, with the viewing audience directly influencing the gameplay in real-time through a channel-point-based system, including an interactive, top-down map view that allows them to design upcoming challenges.

Genre: Third-Person Action, Roguelite, \"Streamer vs. Chat\"

Target Audience: Twitch/YouTube streamers and their communities, fans of roguelites, action games, and interactive entertainment.

Core Loop:

Lobby: Streamer and Chat prepare for the run. Chat votes on Loadout and Mutators.

Run: Streamer attempts to clear a series of procedurally generated 3D rooms.

Interact & Design:

In the current room, Chat spends \"caps\" to help or hinder the streamer in real-time.

Using the Producer's View map, Chat votes on the theme and contents of the next undiscovered room.

Conclude: The run ends in success (reaching the end) or failure (death).

Reward/Reset: If successful, the streamer accesses the Prize Vault. Win or lose, the Gauntlet resets for the next unique run.

[font_size=23]Gameplay Mechanics[/font_size]
[font_size=19]The Runner[/font_size]
The player character is agile and responsive, with a core moveset designed for fluid traversal and combat in a 3D environment. The camera is a dynamic over-the-shoulder view.

Controls:

Movement: WASD for forward, backward, and strafing movement.

Camera: Mouse control for looking and aiming.

Jump / Mantle: Ability to jump and automatically mantle ledges.

Dash/Dodge Roll: A quick burst of speed to evade attacks or cross gaps.

Primary Attack: Fired from an over-the-shoulder aiming perspective.

Secondary Action: (e.g., aim down sights, use item).

Interact: Pick up items, open doors.

Health: A simple health bar. Reaching zero ends the run. Health is scarce and primarily comes from medkits or audience intervention.

[font_size=19]The Gauntlet[/font_size]
The Gauntlet is a series of interconnected 3D rooms. The layout of rooms, enemy placements, and trap locations are procedurally generated for each run, heavily influenced by audience votes.

Room Types:

Trap Rooms: Focused on environmental hazards in 3D space.

Combat Rooms: Arenas with cover, verticality, and multiple entry points for enemies.

Platforming Rooms: Requires precise navigation of complex 3D structures.

Safe Rooms: A brief respite. The first room is always a Safe Room.

Enemies:

Mutated Hounds: Fast, melee attackers.

Scrap-Bots: Ranged attackers that use cover.

Stalkers: Stealthy ambush predators.

Automated Turrets: Stationary area-denial threats.

[font_size=23]Twitch/Audience Integration[/font_size]
This is the core of the experience. The currency for all interactions is \"Caps.\"

[font_size=19]Pre-Run Phase[/font_size]
Sponsor's Choice (Loadout Vote): Chat votes on one of three starting loadouts for the streamer.

Mutator Marketplace (Vote): Chat votes on a global modifier for the entire run.

[font_size=19]Live-Run Interaction (Direct)[/font_size]
These events can be triggered via chat commands or through the Producer's View map in the currently occupied room.

Help Events: Reveal Traps, Spawn Health Pack, Ammo Drop, Friendly Ghost.

Hinder Events: Activate Trap, Release the Hounds, Platform Crumble, Jam Weapon, Brief Blackout.

[font_size=19]The Producer's View (Interactive Map)[/font_size]
This is a browser-based, top-down tactical map of the Gauntlet, accessible to all viewers via a link periodically shared in chat. It provides a \"production booth\" experience for the audience.

Interface: The map displays a 2D layout of the Gauntlet. Discovered rooms show real-time positions of the streamer, enemies, and key objects. Undiscovered rooms are shown as empty templates.

Foreshadowing (Undiscovered Rooms): When the streamer is in one room, the audience can vote on the contents of the next room.

Vote on Room Theme: The chat first votes on a general theme for the upcoming room.

Example Themes: \"Infestation\" (focus on enemy spawns), \"Deathtrap\" (focus on environmental traps), \"Verticality\" (focus on complex platforming).

Vote on Specifics: Based on the winning theme, the audience can vote to add specific elements. (e.g., \"Add a Stalker ambush?\" or \"Install a laser grid?\").

Directing (Discovered Rooms): The map provides a tactical interface for triggering events in the streamer's current room.

Viewers can click on an inactive trap icon to purchase the \"Activate Trap\" event.

Viewers can click on a valid floor space to purchase the \"Release the Hounds\" event at that specific location.

The Director's Cut (Bypass Voting): Any voting process can be instantly bypassed by a single viewer willing to pay a premium Cap price. This immediately locks in their choice for the room's theme or a specific trap/enemy spawn, overriding the popular vote. This action is highlighted in the feed: [User] has pulled rank! The next room will be a DEATHTRAP.

[font_size=19]The Prize Vault[/font_size]
Funding: High-value interactions (Subs, Donations) contribute high-tier items to the Prize Vault.

Access: The streamer gains access if they successfully complete the Gauntlet.

Usage: The streamer can select ONE item from the Vault to use on their next run.

[font_size=23]Art & Sound[/font_size]
Visual Style: Grimy, industrial, oppressive. The third-person camera keeps the Runner as the focal point. The Producer's View uses a clean, tactical blueprint-style aesthetic.

Sound Design: Crunchy, impactful, and directional audio is crucial for gameplay.

Music: A dynamic, synth-heavy soundtrack that reacts to the action.

[font_size=23]Monetization & Retention[/font_size]
Primary Platform: PC (Steam).

Monetization: Premium, one-time purchase.

Retention: Procedural generation combined with audience-driven level design ensures no two runs are ever the same."
script = ExtResource("3_vbvx5")
markdown_text = "# Game Design Document: The Trial of the Under-City

## Overview

Game Title: The Trial of the Under-City

Concept: A fast-paced, third-person action-platformer where a single player (the \"Runner\") navigates a deadly, procedurally generated 3D ruin (the \"Gauntlet\"). The game is designed to be live-streamed, with the viewing audience directly influencing the gameplay in real-time through a channel-point-based system, including an interactive, top-down map view that allows them to design upcoming challenges.

Genre: Third-Person Action, Roguelite, \"Streamer vs. Chat\"

Target Audience: Twitch/YouTube streamers and their communities, fans of roguelites, action games, and interactive entertainment.

Core Loop:

Lobby: Streamer and Chat prepare for the run. Chat votes on Loadout and Mutators.

Run: Streamer attempts to clear a series of procedurally generated 3D rooms.

Interact & Design:

In the current room, Chat spends \"caps\" to help or hinder the streamer in real-time.

Using the Producer's View map, Chat votes on the theme and contents of the next undiscovered room.

Conclude: The run ends in success (reaching the end) or failure (death).

Reward/Reset: If successful, the streamer accesses the Prize Vault. Win or lose, the Gauntlet resets for the next unique run.

## Gameplay Mechanics
### The Runner
The player character is agile and responsive, with a core moveset designed for fluid traversal and combat in a 3D environment. The camera is a dynamic over-the-shoulder view.

Controls:

Movement: WASD for forward, backward, and strafing movement.

Camera: Mouse control for looking and aiming.

Jump / Mantle: Ability to jump and automatically mantle ledges.

Dash/Dodge Roll: A quick burst of speed to evade attacks or cross gaps.

Primary Attack: Fired from an over-the-shoulder aiming perspective.

Secondary Action: (e.g., aim down sights, use item).

Interact: Pick up items, open doors.

Health: A simple health bar. Reaching zero ends the run. Health is scarce and primarily comes from medkits or audience intervention.

### The Gauntlet
The Gauntlet is a series of interconnected 3D rooms. The layout of rooms, enemy placements, and trap locations are procedurally generated for each run, heavily influenced by audience votes.

Room Types:

Trap Rooms: Focused on environmental hazards in 3D space.

Combat Rooms: Arenas with cover, verticality, and multiple entry points for enemies.

Platforming Rooms: Requires precise navigation of complex 3D structures.

Safe Rooms: A brief respite. The first room is always a Safe Room.

Enemies:

Mutated Hounds: Fast, melee attackers.

Scrap-Bots: Ranged attackers that use cover.

Stalkers: Stealthy ambush predators.

Automated Turrets: Stationary area-denial threats.

## Twitch/Audience Integration
This is the core of the experience. The currency for all interactions is \"Caps.\"

### Pre-Run Phase
Sponsor's Choice (Loadout Vote): Chat votes on one of three starting loadouts for the streamer.

Mutator Marketplace (Vote): Chat votes on a global modifier for the entire run.

### Live-Run Interaction (Direct)
These events can be triggered via chat commands or through the Producer's View map in the currently occupied room.

Help Events: Reveal Traps, Spawn Health Pack, Ammo Drop, Friendly Ghost.

Hinder Events: Activate Trap, Release the Hounds, Platform Crumble, Jam Weapon, Brief Blackout.

### The Producer's View (Interactive Map)
This is a browser-based, top-down tactical map of the Gauntlet, accessible to all viewers via a link periodically shared in chat. It provides a \"production booth\" experience for the audience.

Interface: The map displays a 2D layout of the Gauntlet. Discovered rooms show real-time positions of the streamer, enemies, and key objects. Undiscovered rooms are shown as empty templates.

Foreshadowing (Undiscovered Rooms): When the streamer is in one room, the audience can vote on the contents of the next room.

Vote on Room Theme: The chat first votes on a general theme for the upcoming room.

Example Themes: \"Infestation\" (focus on enemy spawns), \"Deathtrap\" (focus on environmental traps), \"Verticality\" (focus on complex platforming).

Vote on Specifics: Based on the winning theme, the audience can vote to add specific elements. (e.g., \"Add a Stalker ambush?\" or \"Install a laser grid?\").

Directing (Discovered Rooms): The map provides a tactical interface for triggering events in the streamer's current room.

Viewers can click on an inactive trap icon to purchase the \"Activate Trap\" event.

Viewers can click on a valid floor space to purchase the \"Release the Hounds\" event at that specific location.

The Director's Cut (Bypass Voting): Any voting process can be instantly bypassed by a single viewer willing to pay a premium Cap price. This immediately locks in their choice for the room's theme or a specific trap/enemy spawn, overriding the popular vote. This action is highlighted in the feed: [User] has pulled rank! The next room will be a DEATHTRAP.

### The Prize Vault
Funding: High-value interactions (Subs, Donations) contribute high-tier items to the Prize Vault.

Access: The streamer gains access if they successfully complete the Gauntlet.

Usage: The streamer can select ONE item from the Vault to use on their next run.

## Art & Sound
Visual Style: Grimy, industrial, oppressive. The third-person camera keeps the Runner as the focal point. The Producer's View uses a clean, tactical blueprint-style aesthetic.

Sound Design: Crunchy, impactful, and directional audio is crucial for gameplay.

Music: A dynamic, synth-heavy soundtrack that reacts to the action.

## Monetization & Retention
Primary Platform: PC (Steam).

Monetization: Premium, one-time purchase.

Retention: Procedural generation combined with audience-driven level design ensures no two runs are ever the same."
h1 = SubResource("Resource_glb6x")
h2 = SubResource("Resource_1hc8u")
h3 = SubResource("Resource_ub2gb")
h4 = SubResource("Resource_qi205")
h5 = SubResource("Resource_0v8em")
h6 = SubResource("Resource_jsubp")
